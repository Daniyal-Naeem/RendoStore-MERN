{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/ShippingScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","listProducts","dispatch","a","axios","get","data","response","message","listProductDetails","HomeScreen","useDispatch","useSelector","useEffect","key","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","Item","description","countInStock","Form","Control","onChange","e","target","Array","keys","Button","onClick","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","xs","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","onSubmit","preventDefault","Group","controlId","Label","placeholder","required","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","window","confirm","delete","deleteProduct","post","Table","striped","bordered","hover","responsive","category","brand","ProductEditScreen","setName","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","loadingUpdate","errorUpdate","successUpdate","countInSock","put","updateProduct","App","path","component","exact","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.78d890ad.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\n\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  \n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n \n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    default:\n      return state\n  }\n}","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container } from 'react-bootstrap'\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg='danger' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>RendoStore</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              <LinkContainer to='/productlist'>\n                <Nav.Link>\n                <i className=\"fas fa-list\"></i> Product list\n                </Nav.Link>\n              </LinkContainer>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; RendoStore</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get('/api/products')\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    \n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product\n      \n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n   \n\n    const { data } = await axios.post(`/api/products`, {})\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n  \n\n    await axios.delete(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n  useEffect(() => {\n    dispatch(listProducts())\n  }, [dispatch])\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProductDetails } from '../actions/productActions'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id))\n  }, [dispatch, match])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                />\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>${product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as='select'\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className='btn-block'\n                    type='button'\n                    disabled={product.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart)\r\n  const { shippingAddress } = cart\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address)\r\n  const [city, setCity] = useState(shippingAddress.city)\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n  const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Checkout</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n\r\n    if (successCreate) {\r\n      history.push(`/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts())\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      // DELETE PRODUCTS\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>CATEGORY</th>\r\n              <th>BRAND</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>${product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n                <td>\r\n                  <LinkContainer to={`/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n        dispatch({ type: PRODUCT_UPDATE_RESET })\r\n        history.push('/productlist')\r\n    } else {\r\n        if (!product.name || product._id !== productId) {\r\n            dispatch(listProductDetails(productId))\r\n          } else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInSock)\r\n            setDescription(product.description)\r\n          }\r\n    }\r\n  }, [dispatch, history, productId, product , successUpdate])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    // UPDATE PRODUCT\r\n    dispatch(\r\n        updateProduct({\r\n          _id: productId,\r\n          name,\r\n          price,\r\n          image,\r\n          brand,\r\n          category,\r\n          description,\r\n          countInStock,\r\n        })\r\n      )\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/productlist' component={ProductListScreen} />\n          <Route path='/product/:id/edit' component={ProductEditScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}